System.register(["@angular/core","./item","@angular/router","./item.service"],function(exports_1,context_1){"use strict";var core_1,item_1,router_1,item_service_1,ItemDetailEditComponent,__decorate=(context_1&&context_1.id,this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=c<3?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r}),__metadata=this&&this.__metadata||function(k,v){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(k,v)};return{setters:[function(core_1_1){core_1=core_1_1},function(item_1_1){item_1=item_1_1},function(router_1_1){router_1=router_1_1},function(item_service_1_1){item_service_1=item_service_1_1}],execute:function(){ItemDetailEditComponent=function(){function ItemDetailEditComponent(router,activatedRoute,itemService){this.router=router,this.activatedRoute=activatedRoute,this.itemService=itemService}return ItemDetailEditComponent.prototype.ngOnInit=function(){var _this=this,id=+this.activatedRoute.snapshot.params.id;id?this.itemService.get(id).subscribe(function(item){return _this.item=item}):0===id?this.item=new item_1.Item(0,"New Item",null):(console.log("invalid id: routing back to home..."),this.router.navigate([""]))},ItemDetailEditComponent.prototype.onInsert=function(item){var _this=this;return this.itemService.add(item).subscribe(function(data){_this.item=data,_this.router.navigate([""])},function(error){console.log(error)})},ItemDetailEditComponent.prototype.onUpdate=function(item){var _this=this;return this.itemService.update(item).subscribe(function(data){_this.item=data,_this.router.navigate([""])},function(error){console.log(error)})},ItemDetailEditComponent.prototype.onDelete=function(item){var _this=this;return this.itemService.delete(item.Id).subscribe(function(data){_this.item=data,_this.router.navigate([""])},function(error){console.log(error)})},ItemDetailEditComponent.prototype.onView=function(item){this.router.navigate(["item/view",item.Id])},ItemDetailEditComponent.prototype.onBack=function(item){this.router.navigate([""])},ItemDetailEditComponent=__decorate([core_1.Component({selector:"item-detail",template:'\n         <div *ngIf="item" class="item-container">\n          <div class="item-tab-menu">\n            <span class="selected">Edit</span>\n            <span *ngIf="item.Id != 0" (click)="onView(item)">View</span>\n          </div>\n          <div class="item-details">\n            <div class="mode">Edit Mode</div>\n            <h2>{{item.Title}}</h2>\n                <ul>\n                    <li>\n                        <label>Title:</label>\n                        <input [(ngModel)]="item.Title" placeholder="Insert the title..."/>\n                    </li>\n                    <li>\n                        <label>Description:</label>\n                        <textarea [(ngModel)]="item.Description" placeholder="Insert a suitable description..."></textarea>\n                    </li>\n                </ul>\n                <div *ngIf="item.Id == 0" class="commands insert">\n                    <input type="button" value="Save" (click)="onInsert(item)" />\n                    <input type="button" value="Cancel" (click)="onBack()" />\n                </div>\n                <div *ngIf="item.Id != 0" class="commands update">\n                    <input type="button" value="Update" (click)="onUpdate(item)" />\n                    <input type="button" value="Delete" (click)="onDelete(item)" />\n                    <input type="button" value="Cancel" (click)="onView(item)" />\n                </div>\n            </div>\n        </div>\n    ',styles:['\n.item-container {  \n    width: 600px;\n}\n\n.item-tab-menu {\n    margin-right: 30px;\n}\n\n.item-tab-menu span {\n    background-color: #dddddd;\n    border: 1px solid #666666;\n    border-bottom: 0;\n    cursor: pointer;\n    display: block;\n    float: right;\n    margin: 0 0 -1px 5px;\n    padding: 5px 10px 4px 10px;\n    text-align: center;\n    width: 60px;\n}\n\n.item-tab-menu span.selected {\n    background-color: #eeeeee;\n    cursor: auto;\n    font-weight: bold;\n    padding-bottom: 5px;\n}\n\n.item-details {\n    background-color: #eeeeee;\n    border: 1px solid black;\n    clear: both;\n    margin: 0;\n    padding: 5px 10px;\n}\n\n.item-details * {\n    vertical-align: middle;\n}\n\n.item-details .mode {\n    font-size: 0.8em;\n    color: #777777;\n}\n\n.item-details ul li {\n    padding: 5px 0;\n}\n\n.item-details input[type="text"] {\n    display: block;\n    width: 100%;\n}\n\n.item-details textarea {\n    display: block;\n    width: 100%;\n    height: 60px;\n}\n\n.commands {\n    text-align: right;\n    margin: 10px 20px 10px 10px;\n}\n']}),__metadata("design:paramtypes",[router_1.Router,router_1.ActivatedRoute,item_service_1.ItemService])],ItemDetailEditComponent)}(),exports_1("ItemDetailEditComponent",ItemDetailEditComponent)}}});
//# sourceMappingURL=item-detail-edit.component.js.map
